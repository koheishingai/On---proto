doctype html
html
  head
    title De-vision Proto2
    meta(charset="utf8")
    meta(content='width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no', name='viewport', user-scalable='no')
    meta(name='google-signin-scope', content='profile email')
    meta(name='google-signin-client_id', content='708405754046-6tc7l8878g1qcbdd8ltm1rihjs960nen.apps.googleusercontent.com')
    link(rel="stylesheet" type="text/css" href="./styles/main.css")
    script(src='https://apis.google.com/js/platform.js', async='', defer='')
  body#splash
    div.container
      img.logo(src="./images/logo.png")
      p.sub みないできけるコンテンツ
      div.login-wrap
        .google.button
          .g-signin2(data-onsuccess='onSignIn', data-theme='dark')
          i.icon
            i.icon-google-plus
          .slide
            p
              | ログイン
        // .facebook.button
          // fb:login-button(scope='public_profile,email', onlogin='checkLoginState();')
          i.icon
            i.icon-facebook
          .slide
            p
              | facebook
      div.main-wrap
        #menu
        div.video-cta
          svg.playbutton(width="88px" height="88px" viewBox="0 0 88 88" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns")
            g#Page-1(stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" sketch:type="MSPage")
              g#vanity-google-store-copy(sketch:type="MSArtboardGroup" transform="translate(-657.000000, -354.000000)")
                g#playbutton(sketch:type="MSLayerGroup" transform="translate(658.000000, 355.000000)")
                  circle#playstroke(stroke="#FFFFFF" stroke-width="2" fill-opacity="0.2" fill="#000000" sketch:type="MSShapeGroup" cx="43" cy="43" r="43")
                  polygon#Triangle-1(fill="#FFFFFF" sketch:type="MSShapeGroup" transform="translate(47.000000, 43.000000) rotate(90.000000) translate(-47.000000, -43.000000) " points="47 29 61 57 33 57 ")
            img#cross(src="./images/cross.svg")
          div.menu.m1
            img.face(src="./images/science.svg")
          // div.menu.m2
            img.face(src="./images/sad.svg")
          div.menu.m3
            img.face(src="./images/sunny.svg")
          div.menu.m4
            img.face(src="./images/us.svg")
          div.menu.m5
            img.heart(src="./images/heart.svg")
          p.date 2016年1月17日
        .menu-wrap
          .prof-image
            p.name
          .favorite
            p.name お気に入り
          .history
            p.name 再生履歴
          .setting
            p.name 再生設定
          .logout(onclick="signOut();") ログアウト
      div.hide
        // .g-signin2(data-onsuccess='onSignIn', data-theme='dark')
        // fb:login-button(scope='public_profile,email', onlogin='checkLoginState();')
        #status
      footer
        p.help つかいかた
        p.title 
      div.mask-main
    div.favorite-wrap
      .modal-menu
      h1.modal-title お気に入り
    div.history-wrap
      .modal-menu
      h1.modal-title 再生履歴
    div.setting-wrap
      .modal-menu
      h1.modal-title 再生設定
  script(src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js")
  script(src="./scripts/main.js")
  script.
    function onSignIn(googleUser) {
    // Useful data for your client-side scripts:
    var profile = googleUser.getBasicProfile();
    console.log("ID: " + profile.getId()); // Don't send this directly to your server!
    console.log("Name: " + profile.getName());
    console.log("Image URL: " + profile.getImageUrl());
    console.log("Email: " + profile.getEmail());
    // The ID token you need to pass to your backend:
    var id_token = googleUser.getAuthResponse().id_token;
    console.log("ID Token: " + id_token);
    $('.prof-image').css('background', 'url('+ profile.getImageUrl() +') no-repeat center center').css('background-size', 'cover');
    $('.prof-image > p.name').text(profile.getName());
    $('body').addClass('login');
    };
    function signOut() {
    var auth2 = gapi.auth2.getAuthInstance();
    auth2.signOut().then(function () {
    console.log('User signed out.');
    location.reload();
    });
    }
  script.
    // This is called with the results from from FB.getLoginStatus().
    function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
    // Logged into your app and Facebook.
    testAPI();
    } else if (response.status === 'not_authorized') {
    // The person is logged into Facebook, but not your app.
    document.getElementById('status').innerHTML = 'Please log ' +
    'into this app.';
    } else {
    // The person is not logged into Facebook, so we're not sure if
    // they are logged into this app or not.
    document.getElementById('status').innerHTML = 'Please log ' +
    'into Facebook.';
    }
    }
    // This function is called when someone finishes with the Login
    // Button.  See the onlogin handler attached to it in the sample
    // code below.
    function checkLoginState() {
    FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
    });
    }
    window.fbAsyncInit = function() {
    FB.init({
    appId      : '1062719853785706',
    cookie     : true,  // enable cookies to allow the server to access
    // the session
    xfbml      : true,  // parse social plugins on this page
    version    : 'v2.2' // use version 2.2
    });
    // Now that we've initialized the JavaScript SDK, we call
    // FB.getLoginStatus().  This function gets the state of the
    // person visiting this page and can return one of three states to
    // the callback you provide.  They can be:
    //
    // 1. Logged into your app ('connected')
    // 2. Logged into Facebook, but not your app ('not_authorized')
    // 3. Not logged into Facebook and can't tell if they are logged into
    //    your app or not.
    //
    // These three cases are handled in the callback function.
    FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
    });
    };
    // Load the SDK asynchronously
    (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
    // Here we run a very simple test of the Graph API after login is
    // successful.  See statusChangeCallback() for when this call is made.
    function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
    console.log('Successful login for: ' + response.name);
    document.getElementById('status').innerHTML =
    'Thanks for logging in, ' + response.name + '!';
    });
    }